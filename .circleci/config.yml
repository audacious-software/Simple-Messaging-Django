version: 2.1

orbs:
  python: circleci/python@1.2

workflows:
  build:
    jobs:
      - build-38
      - build-27

jobs:
  build-38:
    docker:
      - image: cimg/python:3.8
      - image: cimg/9.6.24-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - restore_cache:
          key: venv-38-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Build and validate
          command: |
            sudo apt-get update && sudo apt-get install -y gdal-bin
            python3 -m venv /home/circleci/venv
            . /home/circleci/venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt --progress-bar off
            cd ..
            mv project simple_messaging
            mkdir django
            cd django
            django-admin.py startproject sm
            mv ../simple_messaging sm
            cd sm
            git clone https://github.com/audacious-software/Quicksilver-Django.git quicksilver
            git clone https://github.com/audacious-software/Simple-Data-Export-Django.git simple_data_export
            cp simple_messaging/circle_settings.py sm/settings.py
            cp simple_messaging/circle_urls.py sm/urls.py
            mkdir -p media/simple_data_export_uploads
            python manage.py migrate
            python manage.py test
            cp simple_messaging/.pylintrc .
            pylint simple_messaging
            bandit -r .      
      - save_cache:
          key: venv-38-{{ .Branch }}-{{ checksum "/home/circleci/django/sm/simple_messaging/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app

  build-27:
    docker:
      - image: cimg/python:2.7
      - image: circleci/postgres:9.6.9-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - restore_cache:
          key: venv-27-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Build and validate
          command: |
            sudo apt-get update && sudo apt-get install -y gdal-bin
            virtualenv /home/circleci/venv
            . /home/circleci/venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt --progress-bar off
            cd ..
            mv project simple_messaging
            mkdir django
            cd django
            django-admin.py startproject sm
            mv ../simple_messaging sm
            cd sm
            git clone https://github.com/audacious-software/Quicksilver-Django.git quicksilver
            git clone https://github.com/audacious-software/Simple-Data-Export-Django.git simple_data_export
            cp simple_messaging/circle_settings.py sm/settings.py
            cp simple_messaging/circle_urls.py sm/urls.py
            mkdir -p media/simple_data_export_uploads
            python manage.py migrate
            python manage.py test
            cp simple_messaging/.pylintrc .
            pylint simple_messaging
            bandit -r .      
      - save_cache:
          key: venv-27-{{ .Branch }}-{{ checksum "/home/circleci/django/sm/simple_messaging/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app
